syntax = "proto3";
package benchmark;
option go_package = "v.io/x/ref/runtime/internal/rpc/benchmark";

message timeTime {
    int64 seconds = 1;
    int32 nanos = 2;
}

message vtraceAnnotation {
    timeTime when = 1;
    string msg = 2;
}

message vtraceSpanRecord {
    bytes id = 1;
    bytes parent = 2;
    string name = 3;

    timeTime start = 4;
    timeTime end = 5;

    repeated vtraceAnnotation annotations = 6;
}

message vtraceTraceRecord {
    bytes id = 1;
    repeated vtraceSpanRecord spanRecord = 2;
}


message vtraceResponse {
    int32 traceFlags = 1;
    vtraceTraceRecord trace = 2;
}

message rpcResponse {
    optional string error = 1;
    bool endStreamResults = 2;
    uint64 numPosResults = 3;

    vtraceResponse traceResponse = 4;
    bool ackBlessings = 5;
}

message timeDuration {
    int64 seconds = 1;
    int64 nanos = 2;
}

message timeWireDeadline {
    timeDuration fromNow = 1;
    bool noDeadline = 2;
}

message signature {
    bytes purpose = 1;
    string hash = 2;
    bytes r = 3;
    bytes s = 4;
}

message caveat {
    bytes id = 1;
    bytes paramVom = 2;
}

message certificate {
    string extension = 1;
    bytes publicKey = 2;
    repeated caveat caveats = 3;
    signature signature = 4;
}

message certificateChain {
    repeated certificate certificates = 1;
}

message securityWireBlessings {
    repeated certificateChain certificateChains = 1;
}

message vtraceRequest {
    bytes spanId = 1;
    bytes traceId = 2;
    int32 flags = 3;
    int32 logLevel = 4;
}

message rpcRequest {
    string suffix = 1;
    string method = 2;
    uint64 numPosArgs = 3;
    bool endStreamArgs = 4;
    timeWireDeadline deadline = 5;
    securityWireBlessings grantedBlessings = 6;
    vtraceRequest traceRequest = 7;
    string language = 8;
}
